version: '3.8' # Pode remover esta linha ou usar '3.9'

networks:
  cinema_network:
    driver: bridge

volumes:
  pgdata: # Manter apenas o volume para o PostgreSQL

services:
  # 1. Serviço do Banco de Dados PostgreSQL
  db:
    image: postgres:16-alpine
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_HOST_PORT}:${POSTGRES_CONTAINER_PORT}"
    networks:
      - cinema_network

  # 2. Serviço do Backend NestJS
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    restart: always
    environment:
      DATABASE_URL: ${DATABASE_URL}
      PORT: ${BACKEND_CONTAINER_PORT}
    ports:
      - "${BACKEND_CONTAINER_PORT}:${BACKEND_CONTAINER_PORT}"
    depends_on:
      - db
    networks:
      - cinema_network

  # *** SERVIÇO 'frontend_builder' REMOVIDO AQUI ***

  # 3. Serviço Nginx (Agora vai construir e servir o frontend)
  nginx:
    build: # <--- AGORA O NGINX TAMBÉM TEM UMA ETAPA DE BUILD NO SEU DOCKERFILE
      context: ./frontend # Onde encontrar o Dockerfile do Nginx
      dockerfile: Dockerfile # O Dockerfile do frontend agora é o Dockerfile do Nginx final
    container_name: nginx # Nome do contêiner exigido
    restart: always
    # O volume ./frontend/nginx.conf continua
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "${NGINX_HOST_PORT}:80"
    depends_on:
      - backend # Nginx precisa do backend para o proxy /api
      # A dependência de frontend_builder não é mais necessária, pois o build é interno ao Dockerfile do Nginx
    networks:
      - cinema_network

  # 4. Serviço PgAdmin4
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_LISTEN_PORT: ${PGADMIN_CONTAINER_PORT}
      PGADMIN_SETUP_WEB: "false"
    ports:
      - "${PGADMIN_HOST_PORT}:${PGADMIN_CONTAINER_PORT}"
    depends_on:
      - db
    networks:
      - cinema_network